# Default values

# Override the chart name
nameOverride: "docker-registry"

# The service this workload is part of
# fullappOverride: ""

appVersion: 0.0.1

# Environment:
environment: dev

k8s:
  createNamespace: true
  defaultNode: minikube
  # extraAnnotations: {}
  # If Namespace is not set, wil use chart name
  namespace: docker-registry
  deployment:
    # Either Deployment or StatefulSet
    kind: Deployment
      # In case of StatefulSet, set podManagementPolicy
      # podManagementPolicy: ""
    # Enabled by default
    enabled: true
    # Image to use
    image:
      # Registry to pull from
      # Tag to use
      tag: registry
      # ImagePullPolicy
      pullPolicy: Always
    # Default command and args are empty
    # command:
    # args:
    replicaCount: 1
    # Requests and limits:
    resources:
      limits:
        memory: 1024Mi
        cpu: 200m
      requests:
        memory: 128Mi
        cpu: 100m
    # Decide if we want probes or not, mostly for testing or debugging purposes
    enableProbes: true 
    startupProbe:
      initialDelaySeconds: 30
      periodSeconds: 5
      timeoutSeconds: 3
      failureThreshold: 5
      successThreshold: 1
      httpGet:
        path: /
        port: 80
    readinessProbe:
      initialDelaySeconds: 20
      periodSeconds: 5
      timeoutSeconds: 3
      failureThreshold: 5
      successThreshold: 1
      httpGet:
        path: /
        port: 80
    livenessProbe:
      initialDelaySeconds: 40
      periodSeconds: 10
      timeoutSeconds: 3
      failureThreshold: 3
      successThreshold: 1
      httpGet:
        path: /
        port: 80
    # Deployment strategy configuration
    strategy:
      type: RollingUpdate
      maxSurge: "25%"
      maxUnavailable: "25%"
    # In case you need to set hosts
    hostAliases: []
    # Node tolerations
    tolerations: []
    # Node selector
    nodeSelector:
    # Node affinity
    nodeAffinity:
    # pod annotiations
    # extraPodAnnotations:
    environment:
      # Environment variables
      extraVars: 
      - name: REGISTRY_HTTP_ADDR
        value: 0.0.0.0:80
      # Example:
      # extraVars: []
      # - name: varName
      #   value: "varValue"
      # Ports, by default we open service 
      extraPorts: []
        # - name : portName
        #   protocol: TCP
        #   port: 8080
    serviceAccount:
      # Wether or not to create a service account
      create: false
      # If create is true and no name is provided, template 'base.name' will be used
      name: ""
      # Annotations for the service account
      annotations: {}
    # Security Context, only used if set
    securityContext:
  hpa:
    # Enabled by default
    enabled: true
    minReplicas: 1
    maxReplicas: 4
    targetCPUUtilizationPercentage: 90
    scaleDown:
      stabilizationWindowSeconds: 300
      selectPolicy: Max # Min, Max or Disabled
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
    scaleUp:
      stabilizationWindowSeconds: 0
      selectPolicy: Max # Min, Max or Disabled
      policies:
      - type: Percent
        value: 100
        periodSeconds: 15
  persistentVolume:
    # Disabled by default
    enabled: true
    accessModes: ReadWriteMany
    annotations: {}
    claim: docker-registry
    mountPath: /var/lib/registry
    size: 15Gi
    class: local-storage
    subPath: ""
    localPath: /volumes/docker # I use /d/images/registry/registry for the registry, as i have my registry mounted on minikube from a local folder
    persistentVolumeReclaimPolicy: Retain
    name: docker-registry
  service:
    # Enabled by default
    enabled: true
    name: http
    type: LoadBalancer # ClusterIP, LoadBalancer or NodePort
    # If LoadBalancerIP is not set and you are using LoadBalancer, it will be an ephemeral IP address
    # loadBalancerIP: X.X.X.X
    externalPort: 80
    internalPort: 80
    protocol: TCP # TCP, UDP or SCTP if your K8s allows it
    extraPorts:
    - name: docker-registry-local
      internalPort: 80
      externalPort: 5000
      protocol: TCP
  monitoring:
    serviceMonitor:
      # Disabled by default
      enabled: false
      endpoints: []
  ingress:
    # Disabled by default
    enabled: true
    ingressClassName: nginx
    # tls:
    # - hosts: []
    #   secretName: 
    rules:
    - host: docker-registry.local
      paths:
      - path: /
        pathType: Prefix